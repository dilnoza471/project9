function FlappyGame.new 0
push constant 13
call Memory.alloc 1
pop pointer 0
push constant 4000
call Flappy.new 1
pop this 1
push constant 4
pop this 2
push constant 5
pop this 4
push this 1
call Flappy.collision_box_tly 1
pop this 3
push this 3
push constant 32
add
pop this 5
call Pipe.new 0
pop this 6
call Pipe.new 0
pop this 7
call Pipe.new 0
pop this 8
push constant 7
pop this 0
push constant 0
pop this 9
push constant 0
pop this 10
push constant 0
pop this 11
push argument 0
pop this 12
call Screen.clearScreen 0
pop temp 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 12
call String.new 1
push constant 72
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
push constant 12
call Output.moveCursor 2
pop temp 0
push this 12
call Output.printInt 1
pop temp 0
push constant 1
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 1
push constant 7
call Output.moveCursor 2
pop temp 0
push this 11
call Output.printInt 1
pop temp 0
push pointer 0
return
function FlappyGame.dispose 0
push argument 0
pop pointer 0
push this 1
call Flappy.dispose 1
pop temp 0
push this 6
call Pipe.dispose 1
pop temp 0
push this 7
call Pipe.dispose 1
pop temp 0
push this 8
call Pipe.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function FlappyGame.check_input 1
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 32
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call Flappy.jump 1
pop temp 0
label IF_FALSE0
push local 0
push constant 131
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Flappy.jump 1
pop temp 0
label IF_FALSE1
push local 0
push constant 81
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push constant 0
not
return
function FlappyGame.run 0
push argument 0
pop pointer 0
label WHILE_EXP0
push this 9
not
not
if-goto WHILE_END0
push pointer 0
call FlappyGame.check_input 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call Flappy.update 1
pop temp 0
push this 6
call Pipe.update 1
pop temp 0
push this 7
call Pipe.update 1
pop temp 0
push this 8
call Pipe.update 1
pop temp 0
call Pipe.decrement_rightmost 0
pop temp 0
push this 1
call Flappy.collision_box_tly 1
pop this 3
push this 3
push constant 32
add
pop this 5
push this 6
push this 2
push this 3
push this 4
push this 5
call Pipe.collision 5
push this 7
push this 2
push this 3
push this 4
push this 5
call Pipe.collision 5
or
push this 8
push this 2
push this 3
push this 4
push this 5
call Pipe.collision 5
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 9
label IF_FALSE1
push this 0
call Sys.wait 1
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
push this 10
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 10
push this 11
push constant 1
add
pop this 11
push constant 1
push constant 7
call Output.moveCursor 2
pop temp 0
push this 11
call Output.printInt 1
pop temp 0
push this 11
push constant 500
eq
push this 11
push constant 1000
eq
or
push this 11
push constant 1500
eq
or
push this 11
push constant 2000
eq
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push constant 1
sub
pop this 0
label IF_FALSE3
goto IF_END2
label IF_FALSE2
push this 10
push constant 1
add
pop this 10
label IF_END2
goto WHILE_EXP0
label WHILE_END0
push this 11
push this 12
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 11
return
label IF_FALSE4
push this 12
return
